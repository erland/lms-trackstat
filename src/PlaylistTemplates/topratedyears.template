-- PlaylistName:[% playlistname %]
-- PlaylistGroups:[% playlistgroups %]
-- PlaylistOptionContentType:year
[%- IF notrepeat %]
-- PlaylistOptionDontRepeatTracks:1
[%- END %]
-- PlaylistOptionUnlimited:1
[%- IF tracksperyear %]
-- PlaylistOptionNoOfTracks:[% tracksperyear %]
[%- END %]
[%- IF customskipfilter %]
-- PlaylistStartAction1:cli:customskip setsecondaryfilter [% customskipfilter %]
-- PlaylistStopAction1:cli:customskip clearsecondaryfilter
[%- END %]
select year from 
	(select tracks.year,avg(case when track_statistics.rating is null then 60 else track_statistics.rating end) as avgrating from tracks 
		[%- IF library or activelibrary %]
		join multilibrary_track on
			tracks.id=multilibrary_track.track and
			multilibrary_track.library=[% IF activelibrary %]'PlaylistActiveLibrary'[% ELSE %][% library %][% END %]
		[%- END %]
		left join track_statistics on 
			tracks.url = track_statistics.url 
		[%- IF notrepeat %]
		left join dynamicplaylist_history on 
			tracks.id=dynamicplaylist_history.id 
		[%- END %]
		where 
			audio=1
		[%- IF notrepeat %]
			and dynamicplaylist_history.id is null 
		[%- END %]
		group by tracks.year
		[%- IF recentlyplayed and minyeartracks %]
		having max(ifnull(track_statistics.lastplayed,0))<(unix_timestamp()-[% recentlyplayed %]) and count(tracks.id)>=[% minyeartracks %]
		[%- ELSIF recentlyplayed %]
		having max(ifnull(track_statistics.lastplayed,0))<(unix_timestamp()-[% recentlyplayed %])
		[%- ELSIF minyeartracks %]
		having count(tracks.id)>=[% minyeartracks %]
		[%- END %]
		order by avgrating desc,rand() 
		[% IF noofyears %]limit [% noofyears %][% ELSE %]limit 1[%END %]) as toprated
	order by rand()
	limit 1;
