-- PlaylistName:[% playlistname %]
-- PlaylistGroups:[% playlistgroups %]
-- PlaylistOptionContentType:album
[%- IF notrepeat %]
-- PlaylistOptionDontRepeatTracks:1
[%- END %]
-- PlaylistOptionUnlimited:1
[%- IF tracksperalbum %]
-- PlaylistOptionNoOfTracks:[% tracksperalbum %]
[%- END %]
[%- IF customskipfilter %]
-- PlaylistStartAction1:cli:customskip setsecondaryfilter [% customskipfilter %]
-- PlaylistStopAction1:cli:customskip clearsecondaryfilter
[%- END %]
select album from 
	(select tracks.album,avg(ifnull(track_statistics.playCount,0)) as avgcount from tracks 
		[%- IF library or activelibrary %]
		join multilibrary_track on
			tracks.id=multilibrary_track.track and
			multilibrary_track.library=[% IF activelibrary %]'PlaylistActiveLibrary'[% ELSE %][% library %][% END %]
		[%- END %]
		left join track_statistics on 
			tracks.url = track_statistics.url 
		[%- IF notrepeat %]
		left join dynamicplaylist_history on 
			tracks.id=dynamicplaylist_history.id and dynamicplaylist_history.client='PlaylistPlayer'
		[%- END %]
		where 
			audio=1
		[%- IF notrepeat %]
			and dynamicplaylist_history.id is null 
		[%- END %]
		group by tracks.album 
		having 
			max(track_statistics.added)[% IF addedafter %]>[% ELSE %]<[% END %][% IF noofdays %]UNIX_TIMESTAMP(DATE_ADD(NOW(),INTERVAL -[% noofdays %] DAY))[% ELSE %]UNIX_TIMESTAMP(DATE_ADD(NOW(),INTERVAL -30 DAY))[% END %] 
			[% IF minalbumtracks %]and count(tracks.id)>=[% minalbumtracks %][% END %]
			[% IF recentlyplayed %]and max(ifnull(track_statistics.lastplayed,0))<(unix_timestamp()-[% recentlyplayed %])[% END %]
		order by avgcount [% IF leastplayed %]asc[% ELSE %]desc[% END %],rand()
		[% IF noofalbums %]limit [% noofalbums %][% ELSE %]limit 1[%END %]) as recentlyadded
	order by rand()
	limit 1;
