-- PlaylistName:[% playlistname %]
-- PlaylistGroups:[% playlistgroups %]
-- PlaylistOptionContentType:artist
[%- IF notrepeat %]
-- PlaylistOptionDontRepeatTracks:1
[%- END %]
-- PlaylistOptionUnlimited:1
[%- IF tracksperartist %]
-- PlaylistOptionNoOfTracks:[% tracksperartist %]
[%- END %]
[%- IF customskipfilter %]
-- PlaylistStartAction1:cli:customskip setsecondaryfilter [% customskipfilter %]
-- PlaylistStopAction1:cli:customskip clearsecondaryfilter
[%- END %]
select contributor from 
	(select contributor_track.contributor,sum(ifnull(track_statistics.playCount,0)) as sumcount from tracks 
		[%- IF library or activelibrary %]
		join multilibrary_track on
			tracks.id=multilibrary_track.track and
			multilibrary_track.library=[% IF activelibrary %]'PlaylistActiveLibrary'[% ELSE %][% library %][% END %]
		[%- END %]
		left join track_statistics on 
			tracks.url = track_statistics.url 
		join contributor_track on 
			tracks.id=contributor_track.track and contributor_track.role in (1,4,5,6)
		[%- IF notrepeat %]
		left join dynamicplaylist_history on 
			tracks.id=dynamicplaylist_history.id and dynamicplaylist_history.client='PlaylistPlayer'
		[%- END %]
		where 
			audio=1
		[%- IF notrepeat %]
			and dynamicplaylist_history.id is null 
		[%- END %]
		group by contributor_track.contributor
		[%- IF recentlyplayed and minartisttracks %]
		having max(ifnull(track_statistics.lastplayed,0))<(unix_timestamp()-[% recentlyplayed %]) and count(tracks.id)>=[% minartisttracks %]
		[%- ELSIF recentlyplayed %]
		having max(ifnull(track_statistics.lastplayed,0))<(unix_timestamp()-[% recentlyplayed %])
		[%- ELSIF minartisttracks %]
		having count(tracks.id)>=[% minartisttracks %]
		[%- END %]
		order by sumcount desc,rand() 
		[% IF noofartists %]limit [% noofartists %][% ELSE %]limit 1[%END %]) as toprated
	order by rand()
	limit 1;
